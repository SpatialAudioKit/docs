{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Including-SpatialAudioKit-in-your-project","level":2,"type":"heading","text":"Including SpatialAudioKit in your project"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SpatialAudioKit is delivered as a Swift Package, and you add it to your project using the Swift Package Manager. In the Xcode project settings, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package Dependencies"}]},{"type":"text","text":", click the plus icon and input the url for the SpatialAudioKit git repo. After the package has been downloaded you should see it in your Xcode project. You should then be able to import SpatialAudioKit in your .swift file like any other Swift framework."}]},{"type":"codeListing","syntax":"swift","code":["import SpatialAudioKit"]},{"anchor":"Adding-Decoder-IRs-to-your-project","level":2,"type":"heading","text":"Adding Decoder IRs to your project"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The ambisonic renderer used by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/SAKPlayer"},{"type":"text","text":" class that we are about to use requires matrix impulse responses to be packaged with your project. The default SAKIRs can be downloaded "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/SpatialAudioKit\/SAKIRs"},{"type":"text","text":", but you can also make your own IRs using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/SpatialAudioKit\/SAKDecoderMaker"},{"type":"text","text":". You need to make sure these IRs are added to your application bundle, or if you are building a command line app you can place them next to the binary. If the IRs can’t be found your app will crash with a runtime error."}]},{"anchor":"Playing-back-an-Ambisonic-file","level":2,"type":"heading","text":"Playing back an Ambisonic file"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To play back an ambisonic file, you need an instance of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/SAKPlayer"},{"type":"text","text":" class. We will use the default initializer."}]},{"type":"codeListing","syntax":"swift","code":["let player = SAKPlayer()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next we need to prepare the player for the file that you want to play back."}]},{"type":"codeListing","syntax":"swift","code":["let file = URL(fileURLWithPath: \"\/FullPath\/To\/MyAmbisonicFile.opus\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"or, if you bundled the file in your app’s resources"}]},{"type":"codeListing","syntax":"swift","code":["let fileURL = Bundle.main.url(forResource: \"MyAmbisonicFile\", withExtension: \"opus\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SAKPlayer looks at the channel count and file name to set up the Ambisonic Decoder accordingly. If your audio file doesn’t have a channel count that corresponds to a particular order of 3D Ambisonics (e.g. 4 channels for 1st order, 16 channels for 3rd order), the method will fail, so we need to wrap it in a try catch block:"}]},{"type":"codeListing","syntax":"swift","code":["do {","  try player.prepareAudioGraph(forFile: file)","} catch {","  print(\"Error preparing file: \\(error)\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, to actually start the play back we can caller play() on the SAKPlayer, again inside a try catch block, in case of errors:"}]},{"type":"codeListing","syntax":"swift","code":["do {","  try player.play(file: file) {","    print(\"playback completed\")","  }","} catch {","  print(\"Unexpected error: \\(error).\")","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The play method takes a completion handler to tell you when the playback finished."}]},{"anchor":"Pausing-Seeking","level":3,"type":"heading","text":"Pausing, Seeking"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can control the play back of the file with various methods, see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/SAKPlayerProtocol"}]},{"type":"codeListing","syntax":"swift","code":["player.pauseOrResume() \/\/ pause or resume!","player.seek(1000) \/\/ seek 1000ms into the file"]},{"anchor":"Getting-Head-tracking-data-for-visualization","level":2,"type":"heading","text":"Getting Head-tracking data for visualization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SpatialAudioKit includes a singleton class called SAKMotionManger, which wraps several APIs that can be used for head-tracking, either using the AirPod Pros, FacePose estimation, or OSC messages (which could come from a wired IMU based head tracker device). If you need to visualize head tracking in your app, and change head tracking settings, you can use this class."}]},{"type":"codeListing","syntax":"swift","code":["let motionManager = SAKMotionManager.shared"]},{"anchor":"Using-the-SAKObservable-players-in-SwiftUI-projects","level":2,"type":"heading","text":"Using the SAKObservable players in SwiftUI projects"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to use SpatialAudioKit players inside a SwiftUI view, you can do so with the SAKObservable helper classes, which conform to the ObservableObject protocol."}]},{"type":"codeListing","syntax":"swift","code":["@StateObject var player = SAKObservablePlayer()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/spatialaudiokit\/gettingstarted"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/GettingStarted","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Adding playback of a Spatial Audio file to your app"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started with SpatialAudioKit","role":"article","modules":[{"name":"SpatialAudioKit"}]},"hierarchy":{"paths":[["doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit"]]},"references":{"doc://SpatialAudioKit/documentation/SpatialAudioKit":{"role":"collection","title":"SpatialAudioKit","abstract":[{"type":"image","identifier":"SAKIcon.png"}],"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit","kind":"symbol","type":"topic","url":"\/documentation\/spatialaudiokit"},"doc://SpatialAudioKit/documentation/SpatialAudioKit/SAKPlayer":{"role":"symbol","title":"SAKPlayer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SAKPlayer"}],"abstract":[{"type":"text","text":"The SpatialAudioKit AVAudioEngine file player."}],"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/SAKPlayer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SAKPlayer"}],"url":"\/documentation\/spatialaudiokit\/sakplayer"},"https://github.com/SpatialAudioKit/SAKIRs":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/github.com\/SpatialAudioKit\/SAKIRs","url":"https:\/\/github.com\/SpatialAudioKit\/SAKIRs"},"doc://SpatialAudioKit/documentation/SpatialAudioKit/SAKPlayerProtocol":{"role":"symbol","title":"SAKPlayerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SAKPlayerProtocol"}],"abstract":[{"type":"text","text":"Contract for the SpatialAudioKit AVAudioEngine file player"}],"identifier":"doc:\/\/SpatialAudioKit\/documentation\/SpatialAudioKit\/SAKPlayerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SAKPlayerProtocol"}],"url":"\/documentation\/spatialaudiokit\/sakplayerprotocol"},"https://github.com/SpatialAudioKit/SAKDecoderMaker":{"title":"SAKDecoderMaker","titleInlineContent":[{"type":"text","text":"SAKDecoderMaker"}],"type":"link","identifier":"https:\/\/github.com\/SpatialAudioKit\/SAKDecoderMaker","url":"https:\/\/github.com\/SpatialAudioKit\/SAKDecoderMaker"}}}